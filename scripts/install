#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_abort_if_errors	# Stop script if an error is detected

#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers
source ynh_add_extra_apt_repo__3
source ynh_composer__2
source ynh_exec_as
source ynh_install_php__3

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

# Retrieve app id
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..." --time --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die "This path already contains a folder"

path_url=$(ynh_normalize_url_path $path_url)	# Check and normalize path

# Check web path availability
ynh_webpath_available $domain $path_url
# Register (book) web path
ynh_webpath_register $app $domain $path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set $app domain "$domain"
ynh_app_setting_set $app path_url "$path_url"
ynh_app_setting_set $app admin "$admin"
ynh_app_setting_set $app is_public "$is_public"

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --time --weight=1

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# INSTALL PHP
#=================================================
ynh_script_progression --message="Installing PHP $php_app_version..." --time --weight=3

ynh_install_php --phpversion="$php_app_version" --package="$php_additonal_packages"

#=================================================
# CREATE A MYSQL DB
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --time --weight=1

db_name=$(ynh_sanitize_dbid $app)
db_user="$db_name"

# Generate random DES key & password
deskey=$(ynh_string_random 24)
ynh_app_setting_set "$app" deskey "$deskey"
ynh_app_setting_set "$app" db_name "$db_name"

# Initialize database
ynh_mysql_setup_db "$db_user" "$db_name"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Downloading source files..." --time --weight=1

ynh_app_setting_set $app final_path "$final_path"
# Create tmp directory and fetch app inside
TMPDIR=$(mktemp -d)
ynh_setup_source "$TMPDIR"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --time --weight=1

ynh_system_user_create $app # Create a dedicated system user

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..." --time --weight=1

ynh_add_nginx_config
if [ "$path_url" = "/" ]
then
  # Replace "//" location (due to nginx template)
  # Prevent from replacing in "http://" expressions by excluding ":" as preceding character
  sed --in-place "s@\([^:]\)//@\1/@g" /etc/nginx/conf.d/$domain.d/$app.conf
else
  # Move prefix comment #for-subdir at end of lines
  sed --in-place "s/#for-subdir\(.*\)/\1 #for-subdir/g" /etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# SPECIFIC SETUP
#=================================================
# INSTALL AND INIT COMPOSER
#=================================================
ynh_script_progression --message="Installing Composer..." --time --weight=4

ynh_install_composer --phpversion="$php_app_version" --workdir="$TMPDIR"

#=================================================
# CONFIGURE & INSTALL PILEA
#=================================================
ynh_script_progression --message="Installing and configuring Pilea..." --time --weight=1

pilea_conf="${TMPDIR}/.env"
cp ../conf/.env $pilea_conf

ynh_replace_string "database_name" "${db_name}" "$pilea_conf"
ynh_replace_string "database_user" "${db_user}" "$pilea_conf"
ynh_replace_string "database_password" "${db_pwd}" "$pilea_conf"
ynh_replace_string "app_secret" "${deskey}" "$pilea_conf"

# Restrict rights to Pilea user only
chmod 600 "$pilea_conf"

# Install files and set permissions
mv "$TMPDIR" "$final_path"

# Set rights on directory
chown -R $app: $final_path
chmod 755 $final_path

# Install Pilea
pushd $final_path
  ynh_exec_as $app php7.3 bin/console pilea:install "$app" -n

  # Create Pilea's user
  for username in $(ynh_user_list)
  do
    user_pass=$(ynh_string_random)
    ynh_exec_as $app php7.3 bin/console pilea:user:add "$username" "$user_pass"
  done

  # Set admin user
  ynh_exec_as $app php7.3 bin/console pilea:user:grant "$admin"
popd

# Set up cron job
cron_path="/etc/cron.d/$app"
cp -a ../conf/pilea.cron "$cron_path"
chown root: "$cron_path"
chmod 644 "$cron_path"

ynh_replace_string "#USER#" "$app" "$cron_path"
ynh_replace_string "#DESTDIR#" "$final_path" "$cron_path"

#=================================================
# GENERIC FINALIZATION
#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..." --time --weight=1

# Copy and set php7.3-fpm configuration
ynh_add_fpm_config --phpversion="$php_app_version"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..." --time --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
  ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# ADAPT HOOK FOR PILEA INSTANCE
#=================================================
ynh_script_progression --message="Adapting hooks..." --time --weight=1
ynh_replace_string "APPNAMETOCHANGE" $app ../hooks/post_user_create
ynh_replace_string "APPNAMETOCHANGE" $app ../hooks/post_user_delete

#=================================================
# RELOAD SERVICES
#=================================================
ynh_script_progression --message="Reloading services..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload
ynh_systemd_action --service_name="php$php_app_version-fpm" --action=reload

#=================================================
# END OF SCRIPT
#=================================================
ynh_script_progression --message="Installation of $app completed" --time --last