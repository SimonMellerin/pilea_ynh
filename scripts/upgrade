#!/bin/bash

#=================================================
# GENERIC STARTING
#=================================================
# IMPORT GENERIC HELPERS
#=================================================
source _common.sh
source /usr/share/yunohost/helpers
source ynh_add_extra_apt_repo__3
source ynh_composer__2
source ynh_exec_as
source ynh_install_php__3

#=================================================
# LOAD SETTINGS
#=================================================
ynh_print_info --message="Loading installation settings..."

# Set app specific variables
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_app_setting_get "$app" path_url)
is_public=$(ynh_app_setting_get "$app" is_public)
# Compatibility with previous version
if [ -z "$path_url" ] ; then
  path_url=$(ynh_app_setting_get "$app" path)
  ynh_app_setting_set $app path_url "$path_url"
fi
path_url=$(ynh_normalize_url_path $path_url)
db_pwd=$(ynh_app_setting_get "$app" mysqlpwd)
deskey=$(ynh_app_setting_get "$app" deskey)
final_path=$(ynh_app_setting_get "$app" final_path)
# Compatibility with previous version
if [ -z "$final_path" ] ; then
  final_path="/var/www/$app"
  ynh_app_setting_set $app final_path "$final_path"
fi

db_name=$(ynh_app_setting_get "$app" db_name)
# Compatibility with previous version
if [ -z "$db_name" ] ; then
  db_name=$app
  ynh_app_setting_set "$app" db_name "$db_name"
fi
db_user="$db_name"

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================
ynh_print_info --message="Backing up the app before upgrading (may take a while)..."

# Use prior backup and restore on error only if backup feature
# exists on installed instance
ynh_backup_before_upgrade # Backup the current version of the app
ynh_clean_setup () {
    ynh_restore_upgradebackup
}
ynh_abort_if_errors	# Stop script if an error is detected

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_app_dependencies $pkg_dependencies
ynh_install_php --phpversion="$php_app_version" --package="$php_additonal_packages"

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info --message="Downloading Pilea source files..."

# Create tmp directory and fetch app inside
TMPDIR=$(mktemp -d)
ynh_setup_source "$TMPDIR"

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info --message="Making sure dedicated system user exists..."

ynh_system_user_create $app # Create dedicated user if not existing

#=================================================
# NGINX CONFIGURATION
#=================================================

ynh_add_nginx_config
if [ "$path_url" = "/" ]
then
  # Replace "//" location (due to nginx template)
  # Prevent from replacing in "http://" expressions by excluding ":" as preceding character
  sed --in-place "s@\([^:]\)//@\1/@g" /etc/nginx/conf.d/$domain.d/$app.conf
else
  # Move prefix comment #for-subdir at end of lines
  sed --in-place "s/#for-subdir\(.*\)/\1 #for-subdir/g" /etc/nginx/conf.d/$domain.d/$app.conf
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"


#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_print_info --message="Upgrading php-fpm configuration..."

# Create a dedicated php-fpm config
ynh_add_fpm_config --phpversion="$php_app_version"


#=================================================
# SETUP SSOWAT
#=================================================

# Make app public if necessary
if [ $is_public -eq 1 ]
then
  ynh_app_setting_set $app skipped_uris "/"
fi

#=================================================
# SPECIFIC SETUP
#=================================================
# UPDATE DEPENDENCIES WITH COMPOSER
#=================================================
ynh_print_info --message="Upgrading Composer depedencies..."

# Check if dependencies need to be updated with composer
if [ -f "${TMPDIR}/composer.phar" ]; then
  ynh_composer_exec --phpversion="$php_app_version" --workdir="${TMPDIR}" --commands="install"
else
  ynh_install_composer --phpversion="$php_app_version" --workdir="$TMPDIR"
fi

#=================================================
# CONFIGURE & UPDATE PILEA
#=================================================
ynh_print_info --message="Upgrading Pilea..."

# Copy and set Pilea dist configuration
pilea_conf="${TMPDIR}/.env"
cp ../conf/.env $pilea_conf

ynh_replace_string "database_name" "${db_name}" "$pilea_conf"
ynh_replace_string "database_user" "${db_user}" "$pilea_conf"
ynh_replace_string "database_password" "${db_pwd}" "$pilea_conf"
ynh_replace_string "app_secret" "${deskey}" "$pilea_conf"

# Replace files and set permissions
ynh_secure_remove "${final_path}"
cp -a $TMPDIR/. "${final_path}"
chown -R $app: "${final_path}"
chmod 755 $final_path

# Install dependencies and Pilea
pushd $final_path
  ynh_exec_as $app php7.3 bin/console cache:clear -n
  ynh_exec_as $app php7.3 bin/console doctrine:migrations:migrate -n
popd

# Set up cron job
cron_path="/etc/cron.d/$app"
cp -a ../conf/pilea.cron "$cron_path"
chown root: "$cron_path"
chmod 644 "$cron_path"

ynh_replace_string "#USER#" "$app" "$cron_path"
ynh_replace_string "#DESTDIR#" "$final_path" "$cron_path"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info --message="Upgrading SSOwat configuration..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
  # unprotected_uris allows SSO credentials to be passed anyway
  ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX AND FPM
#=================================================
ynh_print_info --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload
ynh_systemd_action --service_name="php$php_app_version-fpm" --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info --message="Upgrade of $app completed"